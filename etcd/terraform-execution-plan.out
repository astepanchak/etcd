------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

 <= data.template_file.etcd_user_data
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "#cloud-config\n\n## 1. Package upgrade and instally Python 2.x (to bootstrap Ansible)\n## 2. Attach data volume\n## 3. Set hostname and create private DNS CNAME record (based on http://scraplab.net/custom-ec2-hostnames-and-dns-entries/)\n\n## For cloud-config syntax see: https://github.com/number5/cloud-init/blob/master/doc/examples/\n\n# Run apt-get update\npackage_update: true\n\n# Install packages (AWS CLI for boot scripts, below; Python 2.x for Ansible)\npackages:\n  - awscli\n  - python\n\n# Set the hostname and FQDN\nhostname: \"#HOSTNAME\"\nfqdn: \"#HOSTNAME.${domain_name}\"\n# Set our hostname in /etc/hosts too\nmanage_etc_hosts: true\n\nwrite_files:\n  # Attach EBS data volume (first boot only)\n  - content: |\n      #!/bin/sh\n      REGION=\"${region}\"\n      VOLUME_ID=#VOLUMEID\n      SELF_META_URL=\"http://169.254.169.254/latest/meta-data\"\n      INSTANCE_ID=$(curl $${SELF_META_URL}/instance-id 2>/dev/null)\n\n      aws ec2 attach-volume --volume-id $${VOLUME_ID} --instance-id $${INSTANCE_ID} --device /dev/sdh --region $${REGION}\n    path: /var/lib/cloud/scripts/per-once/attach_data_volume.sh\n    permissions: 0755\n\n  # Write a script that executes on every boot and sets a DNS entry pointing to\n  # this instance. This requires the instance having an appropriate IAM role set,\n  # so it has permission to perform the changes to Route53.\n  - content: |\n      #!/bin/sh\n      FQDN=`hostname -f`\n      ZONE_ID=\"${zone_id}\"\n      TTL=${record_ttl}\n      SELF_META_URL=\"http://169.254.169.254/latest/meta-data\"\n      PRIVATE_DNS=$(curl $${SELF_META_URL}/local-hostname 2>/dev/null)\n\n      cat << EOT > /tmp/aws_r53_batch.json\n      {\n        \"Comment\": \"Assign AWS Private DNS as a CNAME of hostname\",\n        \"Changes\": [\n          {\n            \"Action\": \"UPSERT\",\n            \"ResourceRecordSet\": {\n              \"Name\": \"$${FQDN}.\",\n              \"Type\": \"CNAME\",\n              \"TTL\": $${TTL},\n              \"ResourceRecords\": [\n                {\n                  \"Value\": \"$${PRIVATE_DNS}\"\n                }\n              ]\n            }\n          }\n        ]\n      }\n      EOT\n\n      aws route53 change-resource-record-sets --hosted-zone-id $${ZONE_ID} --change-batch file:///tmp/aws_r53_batch.json\n      rm -f /tmp/aws_r53_batch.json\n    path: /var/lib/cloud/scripts/per-boot/set_route53_dns.sh\n    permissions: 0755\n"
      vars.%:                                      <computed>

 <= data.template_file.ssh_cfg
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "Host bastion ${bastion_public_ip} ${bastion_public_dns}\n  Hostname ${bastion_public_ip}\n  User ${bastion_user}\n  ForwardAgent yes\n  ControlMaster auto\n  ControlPath ~/.ssh/ansible-%r@%h:%p\n  ControlPersist 5m\n  UserKnownHostsFile=/dev/null\n  StrictHostKeyChecking=no\n\nHost *.${internal_dns_zone_name} ${vpc_cidr_glob}\n  ProxyCommand ssh ${bastion_user}@${bastion_public_ip} -W %h:%p -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\n  User ${etcd_user}\n  UserKnownHostsFile=/dev/null\n  StrictHostKeyChecking=no\n"
      vars.%:                                      <computed>

  + aws_ebs_volume.etcd_data[0]
      id:                                          <computed>
      arn:                                         <computed>
      availability_zone:                           "us-east-1a"
      encrypted:                                   <computed>
      iops:                                        <computed>
      kms_key_id:                                  <computed>
      size:                                        "5"
      snapshot_id:                                 <computed>
      tags.%:                                      "2"
      tags.Name:                                   "etcd-data-0"
      tags.Owner:                                  "Andrey"
      type:                                        "standard"

  + aws_ebs_volume.etcd_data[1]
      id:                                          <computed>
      arn:                                         <computed>
      availability_zone:                           "us-east-1b"
      encrypted:                                   <computed>
      iops:                                        <computed>
      kms_key_id:                                  <computed>
      size:                                        "5"
      snapshot_id:                                 <computed>
      tags.%:                                      "2"
      tags.Name:                                   "etcd-data-1"
      tags.Owner:                                  "Andrey"
      type:                                        "standard"

  + aws_ebs_volume.etcd_data[2]
      id:                                          <computed>
      arn:                                         <computed>
      availability_zone:                           "us-east-1c"
      encrypted:                                   <computed>
      iops:                                        <computed>
      kms_key_id:                                  <computed>
      size:                                        "5"
      snapshot_id:                                 <computed>
      tags.%:                                      "2"
      tags.Name:                                   "etcd-data-2"
      tags.Owner:                                  "Andrey"
      type:                                        "standard"

  + aws_eip.nat[0]
      id:                                          <computed>
      allocation_id:                               <computed>
      association_id:                              <computed>
      customer_owned_ip:                           <computed>
      domain:                                      <computed>
      instance:                                    <computed>
      network_interface:                           <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      public_ipv4_pool:                            <computed>
      vpc:                                         "true"

  + aws_eip.nat[1]
      id:                                          <computed>
      allocation_id:                               <computed>
      association_id:                              <computed>
      customer_owned_ip:                           <computed>
      domain:                                      <computed>
      instance:                                    <computed>
      network_interface:                           <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      public_ipv4_pool:                            <computed>
      vpc:                                         "true"

  + aws_eip.nat[2]
      id:                                          <computed>
      allocation_id:                               <computed>
      association_id:                              <computed>
      customer_owned_ip:                           <computed>
      domain:                                      <computed>
      instance:                                    <computed>
      network_interface:                           <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      public_ipv4_pool:                            <computed>
      vpc:                                         "true"

  + aws_elb.etcd
      id:                                          <computed>
      arn:                                         <computed>
      availability_zones.#:                        <computed>
      connection_draining:                         "false"
      connection_draining_timeout:                 "300"
      cross_zone_load_balancing:                   "true"
      dns_name:                                    <computed>
      health_check.#:                              "1"
      health_check.0.healthy_threshold:            "2"
      health_check.0.interval:                     "30"
      health_check.0.target:                       "HTTP:2379/health"
      health_check.0.timeout:                      "5"
      health_check.0.unhealthy_threshold:          "2"
      idle_timeout:                                "60"
      instances.#:                                 <computed>
      internal:                                    <computed>
      listener.#:                                  "1"
      listener.215470196.instance_port:            "2379"
      listener.215470196.instance_protocol:        "TCP"
      listener.215470196.lb_port:                  "2379"
      listener.215470196.lb_protocol:              "TCP"
      listener.215470196.ssl_certificate_id:       ""
      name:                                        "andrey-etcd"
      security_groups.#:                           <computed>
      source_security_group:                       <computed>
      source_security_group_id:                    <computed>
      subnets.#:                                   <computed>
      tags.%:                                      "2"
      tags.Name:                                   "etcd"
      tags.Owner:                                  "Andrey"
      zone_id:                                     <computed>

  + aws_iam_instance_profile.etcd
      id:                                          <computed>
      arn:                                         <computed>
      create_date:                                 <computed>
      name:                                        "etcd-node"
      path:                                        "/"
      role:                                        "etcd-node"
      roles.#:                                     <computed>
      unique_id:                                   <computed>

  + aws_iam_role.etcd
      id:                                          <computed>
      arn:                                         <computed>
      assume_role_policy:                          "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"
      create_date:                                 <computed>
      force_detach_policies:                       "false"
      max_session_duration:                        "3600"
      name:                                        "etcd-node"
      path:                                        "/"
      unique_id:                                   <computed>

  + aws_iam_role_policy.attach_volume
      id:                                          <computed>
      name:                                        "attach-volume"
      policy:                                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"ec2:AttachVolume\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:ec2:us-east-1:857934240020:instance/*\"\n    },\n    {\n      \"Action\": \"ec2:AttachVolume\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:ec2:us-east-1:857934240020:volume/*\"\n    }\n  ]\n}\n"
      role:                                        "${aws_iam_role.etcd.id}"

  + aws_iam_role_policy.etcd_update_dns_record
      id:                                          <computed>
      name:                                        "manage-route53-records"
      policy:                                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"route53:ChangeResourceRecordSets\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:route53:::hostedzone/${aws_route53_zone.internal.zone_id}\"\n    }\n  ]\n}\n"
      role:                                        "${aws_iam_role.etcd.id}"

  + aws_instance.bastion
      id:                                          <computed>
      ami:                                         "ami-039a49e70ea773ffc"
      arn:                                         <computed>
      associate_public_ip_address:                 "true"
      availability_zone:                           "us-east-1a"
      cpu_core_count:                              <computed>
      cpu_threads_per_core:                        <computed>
      ebs_block_device.#:                          <computed>
      ephemeral_block_device.#:                    <computed>
      get_password_data:                           "false"
      host_id:                                     <computed>
      instance_state:                              <computed>
      instance_type:                               "t2.micro"
      ipv6_address_count:                          <computed>
      ipv6_addresses.#:                            <computed>
      key_name:                                    "andreys-mbp"
      metadata_options.#:                          <computed>
      network_interface.#:                         <computed>
      network_interface_id:                        <computed>
      outpost_arn:                                 <computed>
      password_data:                               <computed>
      placement_group:                             <computed>
      primary_network_interface_id:                <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      root_block_device.#:                         <computed>
      security_groups.#:                           <computed>
      source_dest_check:                           "false"
      subnet_id:                                   "${aws_subnet.dmz.0.id}"
      tags.%:                                      "5"
      tags.Name:                                   "bastion"
      tags.Owner:                                  "Andrey"
      tags.ansibleFilter:                          "ETCD01"
      tags.ansibleGroup:                           "bastion"
      tags.ansibleNodeName:                        "bastion"
      tenancy:                                     <computed>
      user_data:                                   "dcaee57fea5844339d003702cf893563414a8c36"
      volume_tags.%:                               <computed>
      vpc_security_group_ids.#:                    <computed>

  + aws_instance.etcd[0]
      id:                                          <computed>
      ami:                                         "ami-039a49e70ea773ffc"
      arn:                                         <computed>
      associate_public_ip_address:                 <computed>
      availability_zone:                           "us-east-1a"
      cpu_core_count:                              <computed>
      cpu_threads_per_core:                        <computed>
      ebs_block_device.#:                          <computed>
      ephemeral_block_device.#:                    <computed>
      get_password_data:                           "false"
      host_id:                                     <computed>
      iam_instance_profile:                        "${aws_iam_instance_profile.etcd.id}"
      instance_state:                              <computed>
      instance_type:                               "t2.micro"
      ipv6_address_count:                          <computed>
      ipv6_addresses.#:                            <computed>
      key_name:                                    "andreys-mbp"
      metadata_options.#:                          <computed>
      network_interface.#:                         <computed>
      network_interface_id:                        <computed>
      outpost_arn:                                 <computed>
      password_data:                               <computed>
      placement_group:                             <computed>
      primary_network_interface_id:                <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      root_block_device.#:                         <computed>
      security_groups.#:                           <computed>
      source_dest_check:                           "true"
      subnet_id:                                   "${element(aws_subnet.private.*.id, count.index)}"
      tags.%:                                      "5"
      tags.Name:                                   "etcd-0"
      tags.Owner:                                  "Andrey"
      tags.ansibleFilter:                          "ETCD01"
      tags.ansibleGroup:                           "etcd"
      tags.ansibleNodeName:                        "etcd0"
      tenancy:                                     <computed>
      user_data:                                   "20133a718a717eae7faa084bf94a07c24e49dcd3"
      volume_tags.%:                               <computed>
      vpc_security_group_ids.#:                    <computed>

  + aws_instance.etcd[1]
      id:                                          <computed>
      ami:                                         "ami-039a49e70ea773ffc"
      arn:                                         <computed>
      associate_public_ip_address:                 <computed>
      availability_zone:                           "us-east-1b"
      cpu_core_count:                              <computed>
      cpu_threads_per_core:                        <computed>
      ebs_block_device.#:                          <computed>
      ephemeral_block_device.#:                    <computed>
      get_password_data:                           "false"
      host_id:                                     <computed>
      iam_instance_profile:                        "${aws_iam_instance_profile.etcd.id}"
      instance_state:                              <computed>
      instance_type:                               "t2.micro"
      ipv6_address_count:                          <computed>
      ipv6_addresses.#:                            <computed>
      key_name:                                    "andreys-mbp"
      metadata_options.#:                          <computed>
      network_interface.#:                         <computed>
      network_interface_id:                        <computed>
      outpost_arn:                                 <computed>
      password_data:                               <computed>
      placement_group:                             <computed>
      primary_network_interface_id:                <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      root_block_device.#:                         <computed>
      security_groups.#:                           <computed>
      source_dest_check:                           "true"
      subnet_id:                                   "${element(aws_subnet.private.*.id, count.index)}"
      tags.%:                                      "5"
      tags.Name:                                   "etcd-1"
      tags.Owner:                                  "Andrey"
      tags.ansibleFilter:                          "ETCD01"
      tags.ansibleGroup:                           "etcd"
      tags.ansibleNodeName:                        "etcd1"
      tenancy:                                     <computed>
      user_data:                                   "20133a718a717eae7faa084bf94a07c24e49dcd3"
      volume_tags.%:                               <computed>
      vpc_security_group_ids.#:                    <computed>

  + aws_instance.etcd[2]
      id:                                          <computed>
      ami:                                         "ami-039a49e70ea773ffc"
      arn:                                         <computed>
      associate_public_ip_address:                 <computed>
      availability_zone:                           "us-east-1c"
      cpu_core_count:                              <computed>
      cpu_threads_per_core:                        <computed>
      ebs_block_device.#:                          <computed>
      ephemeral_block_device.#:                    <computed>
      get_password_data:                           "false"
      host_id:                                     <computed>
      iam_instance_profile:                        "${aws_iam_instance_profile.etcd.id}"
      instance_state:                              <computed>
      instance_type:                               "t2.micro"
      ipv6_address_count:                          <computed>
      ipv6_addresses.#:                            <computed>
      key_name:                                    "andreys-mbp"
      metadata_options.#:                          <computed>
      network_interface.#:                         <computed>
      network_interface_id:                        <computed>
      outpost_arn:                                 <computed>
      password_data:                               <computed>
      placement_group:                             <computed>
      primary_network_interface_id:                <computed>
      private_dns:                                 <computed>
      private_ip:                                  <computed>
      public_dns:                                  <computed>
      public_ip:                                   <computed>
      root_block_device.#:                         <computed>
      security_groups.#:                           <computed>
      source_dest_check:                           "true"
      subnet_id:                                   "${element(aws_subnet.private.*.id, count.index)}"
      tags.%:                                      "5"
      tags.Name:                                   "etcd-2"
      tags.Owner:                                  "Andrey"
      tags.ansibleFilter:                          "ETCD01"
      tags.ansibleGroup:                           "etcd"
      tags.ansibleNodeName:                        "etcd2"
      tenancy:                                     <computed>
      user_data:                                   "20133a718a717eae7faa084bf94a07c24e49dcd3"
      volume_tags.%:                               <computed>
      vpc_security_group_ids.#:                    <computed>

  + aws_internet_gateway.gw
      id:                                          <computed>
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "dmz"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_key_pair.default_keypair
      id:                                          <computed>
      fingerprint:                                 <computed>
      key_name:                                    "andreys-mbp"
      key_pair_id:                                 <computed>
      public_key:                                  "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgn/xcT6kWzYGnQ244LVCs0oVSJjMGZnm04OFeoSIRn0zT2n+JRiWaEMukyAOn1ZSQrfkyxTPjISYK/s0hllZpLVHATR1llF3UsSzxbSdUZ3awGrX9oxy7Z0uWt62/r3OVvr3FzJ8PMzodiOTuDNdecC7Aji0vbWWcmVuxogFw0p8Bveq1avYtBCKCgATVOd0diI13DdGwJ2LkBL1VAtTETp7437qQPRm8zTYRx9YYwW4YlwprdAAVITeoXkrOqcDRtE7UWZmtTXeLm5Vnb6+RaO/vYfuJsHJHKHtF4P1LG6Ug33Fc9qJw4WjI2EQQIwyuImGch7oPOyN/6K0uuJD5"

  + aws_nat_gateway.nat[0]
      id:                                          <computed>
      allocation_id:                               "${element(aws_eip.nat.*.id, count.index)}"
      network_interface_id:                        <computed>
      private_ip:                                  <computed>
      public_ip:                                   <computed>
      subnet_id:                                   "${element(aws_subnet.dmz.*.id, count.index)}"

  + aws_nat_gateway.nat[1]
      id:                                          <computed>
      allocation_id:                               "${element(aws_eip.nat.*.id, count.index)}"
      network_interface_id:                        <computed>
      private_ip:                                  <computed>
      public_ip:                                   <computed>
      subnet_id:                                   "${element(aws_subnet.dmz.*.id, count.index)}"

  + aws_nat_gateway.nat[2]
      id:                                          <computed>
      allocation_id:                               "${element(aws_eip.nat.*.id, count.index)}"
      network_interface_id:                        <computed>
      private_ip:                                  <computed>
      public_ip:                                   <computed>
      subnet_id:                                   "${element(aws_subnet.dmz.*.id, count.index)}"

  + aws_route53_record.srv_etcd_client
      id:                                          <computed>
      allow_overwrite:                             <computed>
      fqdn:                                        <computed>
      name:                                        "_etcd-client._tcp"
      records.#:                                   <computed>
      ttl:                                         "60"
      type:                                        "SRV"
      zone_id:                                     "${aws_route53_zone.internal.id}"

  + aws_route53_record.srv_etcd_server
      id:                                          <computed>
      allow_overwrite:                             <computed>
      fqdn:                                        <computed>
      name:                                        "_etcd-server._tcp"
      records.#:                                   <computed>
      ttl:                                         "60"
      type:                                        "SRV"
      zone_id:                                     "${aws_route53_zone.internal.id}"

  + aws_route53_zone.internal
      id:                                          <computed>
      comment:                                     "Managed by Terraform"
      force_destroy:                               "true"
      name:                                        "vpc.aws"
      name_servers.#:                              <computed>
      tags.%:                                      "2"
      tags.Name:                                   "Andrey ETCD"
      tags.Owner:                                  "Andrey"
      vpc.#:                                       "1"
      vpc.~36838595.vpc_id:                        "${aws_vpc.main.id}"
      vpc.~36838595.vpc_region:                    <computed>
      vpc_id:                                      <computed>
      vpc_region:                                  <computed>
      zone_id:                                     <computed>

  + aws_route_table.inetgw
      id:                                          <computed>
      owner_id:                                    <computed>
      propagating_vgws.#:                          <computed>
      route.#:                                     "1"
      route.~966145399.cidr_block:                 "0.0.0.0/0"
      route.~966145399.egress_only_gateway_id:     ""
      route.~966145399.gateway_id:                 "${aws_internet_gateway.gw.id}"
      route.~966145399.instance_id:                ""
      route.~966145399.ipv6_cidr_block:            ""
      route.~966145399.nat_gateway_id:             ""
      route.~966145399.network_interface_id:       ""
      route.~966145399.transit_gateway_id:         ""
      route.~966145399.vpc_peering_connection_id:  ""
      tags.%:                                      "2"
      tags.Name:                                   "dmz"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_route_table.nat[0]
      id:                                          <computed>
      owner_id:                                    <computed>
      propagating_vgws.#:                          <computed>
      route.#:                                     "1"
      route.~2275542443.cidr_block:                "0.0.0.0/0"
      route.~2275542443.egress_only_gateway_id:    ""
      route.~2275542443.gateway_id:                ""
      route.~2275542443.instance_id:               ""
      route.~2275542443.ipv6_cidr_block:           ""
      route.~2275542443.nat_gateway_id:            "${element(aws_nat_gateway.nat.*.id, count.index)}"
      route.~2275542443.network_interface_id:      ""
      route.~2275542443.transit_gateway_id:        ""
      route.~2275542443.vpc_peering_connection_id: ""
      tags.%:                                      "2"
      tags.Name:                                   "nat-0"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_route_table.nat[1]
      id:                                          <computed>
      owner_id:                                    <computed>
      propagating_vgws.#:                          <computed>
      route.#:                                     "1"
      route.~2275542443.cidr_block:                "0.0.0.0/0"
      route.~2275542443.egress_only_gateway_id:    ""
      route.~2275542443.gateway_id:                ""
      route.~2275542443.instance_id:               ""
      route.~2275542443.ipv6_cidr_block:           ""
      route.~2275542443.nat_gateway_id:            "${element(aws_nat_gateway.nat.*.id, count.index)}"
      route.~2275542443.network_interface_id:      ""
      route.~2275542443.transit_gateway_id:        ""
      route.~2275542443.vpc_peering_connection_id: ""
      tags.%:                                      "2"
      tags.Name:                                   "nat-1"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_route_table.nat[2]
      id:                                          <computed>
      owner_id:                                    <computed>
      propagating_vgws.#:                          <computed>
      route.#:                                     "1"
      route.~2275542443.cidr_block:                "0.0.0.0/0"
      route.~2275542443.egress_only_gateway_id:    ""
      route.~2275542443.gateway_id:                ""
      route.~2275542443.instance_id:               ""
      route.~2275542443.ipv6_cidr_block:           ""
      route.~2275542443.nat_gateway_id:            "${element(aws_nat_gateway.nat.*.id, count.index)}"
      route.~2275542443.network_interface_id:      ""
      route.~2275542443.transit_gateway_id:        ""
      route.~2275542443.vpc_peering_connection_id: ""
      tags.%:                                      "2"
      tags.Name:                                   "nat-2"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_route_table_association.dmzinetgw[0]
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.inetgw.id}"
      subnet_id:                                   "${element(aws_subnet.dmz.*.id, count.index)}"

  + aws_route_table_association.dmzinetgw[1]
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.inetgw.id}"
      subnet_id:                                   "${element(aws_subnet.dmz.*.id, count.index)}"

  + aws_route_table_association.dmzinetgw[2]
      id:                                          <computed>
      route_table_id:                              "${aws_route_table.inetgw.id}"
      subnet_id:                                   "${element(aws_subnet.dmz.*.id, count.index)}"

  + aws_route_table_association.nat[0]
      id:                                          <computed>
      route_table_id:                              "${element(aws_route_table.nat.*.id, count.index)}"
      subnet_id:                                   "${element(aws_subnet.private.*.id, count.index)}"

  + aws_route_table_association.nat[1]
      id:                                          <computed>
      route_table_id:                              "${element(aws_route_table.nat.*.id, count.index)}"
      subnet_id:                                   "${element(aws_subnet.private.*.id, count.index)}"

  + aws_route_table_association.nat[2]
      id:                                          <computed>
      route_table_id:                              "${element(aws_route_table.nat.*.id, count.index)}"
      subnet_id:                                   "${element(aws_subnet.private.*.id, count.index)}"

  + aws_security_group.bastion
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "SSH + ICMP from control CIDR; all outbound"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "2"
      ingress.287953431.cidr_blocks.#:             "2"
      ingress.287953431.cidr_blocks.0:             "31.173.84.0/24"
      ingress.287953431.cidr_blocks.1:             "10.42.0.0/16"
      ingress.287953431.description:               ""
      ingress.287953431.from_port:                 "8"
      ingress.287953431.ipv6_cidr_blocks.#:        "0"
      ingress.287953431.prefix_list_ids.#:         "0"
      ingress.287953431.protocol:                  "icmp"
      ingress.287953431.security_groups.#:         "0"
      ingress.287953431.self:                      "false"
      ingress.287953431.to_port:                   "0"
      ingress.3603011909.cidr_blocks.#:            "1"
      ingress.3603011909.cidr_blocks.0:            "31.173.84.0/24"
      ingress.3603011909.description:              ""
      ingress.3603011909.from_port:                "22"
      ingress.3603011909.ipv6_cidr_blocks.#:       "0"
      ingress.3603011909.prefix_list_ids.#:        "0"
      ingress.3603011909.protocol:                 "tcp"
      ingress.3603011909.security_groups.#:        "0"
      ingress.3603011909.self:                     "false"
      ingress.3603011909.to_port:                  "22"
      name:                                        "bastion"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "2"
      tags.Name:                                   "bastion"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_security_group.etcdlb
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "Inbound etcd client from world; outbound etcd client to internal"
      egress.#:                                    "1"
      egress.3645986754.cidr_blocks.#:             "1"
      egress.3645986754.cidr_blocks.0:             "10.42.0.0/16"
      egress.3645986754.description:               ""
      egress.3645986754.from_port:                 "2379"
      egress.3645986754.ipv6_cidr_blocks.#:        "0"
      egress.3645986754.prefix_list_ids.#:         "0"
      egress.3645986754.protocol:                  "tcp"
      egress.3645986754.security_groups.#:         "0"
      egress.3645986754.self:                      "false"
      egress.3645986754.to_port:                   "2379"
      ingress.#:                                   "1"
      ingress.1657525724.cidr_blocks.#:            "1"
      ingress.1657525724.cidr_blocks.0:            "0.0.0.0/0"
      ingress.1657525724.description:              ""
      ingress.1657525724.from_port:                "2379"
      ingress.1657525724.ipv6_cidr_blocks.#:       "0"
      ingress.1657525724.prefix_list_ids.#:        "0"
      ingress.1657525724.protocol:                 "tcp"
      ingress.1657525724.security_groups.#:        "0"
      ingress.1657525724.self:                     "false"
      ingress.1657525724.to_port:                  "2379"
      name:                                        "etcd-lb"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "2"
      tags.Name:                                   "etcd-lb"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_security_group.internal
      id:                                          <computed>
      arn:                                         <computed>
      description:                                 "SSH from bastion; internal+lb etcd; all outbound"
      egress.#:                                    "1"
      egress.482069346.cidr_blocks.#:              "1"
      egress.482069346.cidr_blocks.0:              "0.0.0.0/0"
      egress.482069346.description:                ""
      egress.482069346.from_port:                  "0"
      egress.482069346.ipv6_cidr_blocks.#:         "0"
      egress.482069346.prefix_list_ids.#:          "0"
      egress.482069346.protocol:                   "-1"
      egress.482069346.security_groups.#:          "0"
      egress.482069346.self:                       "false"
      egress.482069346.to_port:                    "0"
      ingress.#:                                   "5"
      ingress.1320509610.cidr_blocks.#:            "0"
      ingress.1320509610.description:              ""
      ingress.1320509610.from_port:                "2380"
      ingress.1320509610.ipv6_cidr_blocks.#:       "0"
      ingress.1320509610.prefix_list_ids.#:        "0"
      ingress.1320509610.protocol:                 "tcp"
      ingress.1320509610.security_groups.#:        "0"
      ingress.1320509610.self:                     "true"
      ingress.1320509610.to_port:                  "2380"
      ingress.1553333333.cidr_blocks.#:            "0"
      ingress.1553333333.description:              ""
      ingress.1553333333.from_port:                "2379"
      ingress.1553333333.ipv6_cidr_blocks.#:       "0"
      ingress.1553333333.prefix_list_ids.#:        "0"
      ingress.1553333333.protocol:                 "tcp"
      ingress.1553333333.security_groups.#:        "0"
      ingress.1553333333.self:                     "true"
      ingress.1553333333.to_port:                  "2379"
      ingress.2951966967.cidr_blocks.#:            "1"
      ingress.2951966967.cidr_blocks.0:            "10.42.0.0/16"
      ingress.2951966967.description:              ""
      ingress.2951966967.from_port:                "8"
      ingress.2951966967.ipv6_cidr_blocks.#:       "0"
      ingress.2951966967.prefix_list_ids.#:        "0"
      ingress.2951966967.protocol:                 "icmp"
      ingress.2951966967.security_groups.#:        "0"
      ingress.2951966967.self:                     "false"
      ingress.2951966967.to_port:                  "0"
      ingress.~3457728489.cidr_blocks.#:           "0"
      ingress.~3457728489.description:             ""
      ingress.~3457728489.from_port:               "22"
      ingress.~3457728489.ipv6_cidr_blocks.#:      "0"
      ingress.~3457728489.prefix_list_ids.#:       "0"
      ingress.~3457728489.protocol:                "tcp"
      ingress.~3457728489.security_groups.#:       <computed>
      ingress.~3457728489.self:                    "false"
      ingress.~3457728489.to_port:                 "22"
      ingress.~3905212263.cidr_blocks.#:           "0"
      ingress.~3905212263.description:             ""
      ingress.~3905212263.from_port:               "2379"
      ingress.~3905212263.ipv6_cidr_blocks.#:      "0"
      ingress.~3905212263.prefix_list_ids.#:       "0"
      ingress.~3905212263.protocol:                "tcp"
      ingress.~3905212263.security_groups.#:       <computed>
      ingress.~3905212263.self:                    "false"
      ingress.~3905212263.to_port:                 "2379"
      name:                                        "internal"
      owner_id:                                    <computed>
      revoke_rules_on_delete:                      "false"
      tags.%:                                      "2"
      tags.Name:                                   "internal"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.dmz[0]
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-1a"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.42.100.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "dmz-0"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.dmz[1]
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-1b"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.42.101.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "dmz-1"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.dmz[2]
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-1c"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.42.102.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "dmz-2"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.private[0]
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-1a"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.42.0.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "private-0"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.private[1]
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-1b"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.42.1.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "private-1"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_subnet.private[2]
      id:                                          <computed>
      arn:                                         <computed>
      assign_ipv6_address_on_creation:             "false"
      availability_zone:                           "us-east-1c"
      availability_zone_id:                        <computed>
      cidr_block:                                  "10.42.2.0/24"
      ipv6_cidr_block:                             <computed>
      ipv6_cidr_block_association_id:              <computed>
      map_public_ip_on_launch:                     "false"
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "private-2"
      tags.Owner:                                  "Andrey"
      vpc_id:                                      "${aws_vpc.main.id}"

  + aws_vpc.main
      id:                                          <computed>
      arn:                                         <computed>
      assign_generated_ipv6_cidr_block:            "false"
      cidr_block:                                  "10.42.0.0/16"
      default_network_acl_id:                      <computed>
      default_route_table_id:                      <computed>
      default_security_group_id:                   <computed>
      dhcp_options_id:                             <computed>
      enable_classiclink:                          <computed>
      enable_classiclink_dns_support:              <computed>
      enable_dns_hostnames:                        "true"
      enable_dns_support:                          "true"
      instance_tenancy:                            "default"
      ipv6_association_id:                         <computed>
      ipv6_cidr_block:                             <computed>
      main_route_table_id:                         <computed>
      owner_id:                                    <computed>
      tags.%:                                      "2"
      tags.Name:                                   "Andrey ETCD"
      tags.Owner:                                  "Andrey"

  + null_resource.ssh_cfg
      id:                                          <computed>
      triggers.%:                                  <computed>

  + template_file.srv_etcd_client_record[0]
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "0 0 2379 etcd0.vpc.aws"

  + template_file.srv_etcd_client_record[1]
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "0 0 2379 etcd1.vpc.aws"

  + template_file.srv_etcd_client_record[2]
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "0 0 2379 etcd2.vpc.aws"

  + template_file.srv_etcd_server_record[0]
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "0 0 2380 etcd0.vpc.aws"

  + template_file.srv_etcd_server_record[1]
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "0 0 2380 etcd1.vpc.aws"

  + template_file.srv_etcd_server_record[2]
      id:                                          <computed>
      rendered:                                    <computed>
      template:                                    "0 0 2380 etcd2.vpc.aws"


Plan: 50 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------
